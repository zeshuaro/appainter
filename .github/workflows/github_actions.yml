name: GitHub Actions

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Release type"
        required: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Get project Flutter version 🏷️
        uses: kuhnroyal/flutter-fvm-config-action@v1

      - name: Setup Flutter 💻
        uses: subosito/flutter-action@v2.2.1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-key: ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Run tests 🧪
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs
          flutter test --coverage --no-test-assets --concurrency=4
          flutter pub run remove_from_coverage -f coverage/lcov.info -r '\.g\.dart$' -r 'extensions\.dart'

      - name: Upload coverage report 📡
        uses: codecov/codecov-action@v2.1.0

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Get project Flutter version 🏷️
        uses: kuhnroyal/flutter-fvm-config-action@v1

      - name: Setup Flutter 💻
        uses: subosito/flutter-action@v2.2.1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-key: ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Run linting 🧪
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs
          flutter analyze

  build-web-deploy:
    name: Build Web and Deploy
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Get project Flutter version 🏷️
        uses: kuhnroyal/flutter-fvm-config-action@v1

      - name: Setup Flutter 💻
        uses: subosito/flutter-action@v2.2.1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-key: ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Build web app 🏗
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs
          flutter build web --dart-define=FLUTTER_WEB_USE_SKIA=true

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4.2.3
        with:
          branch: gh-pages
          folder: build/web

  build-desktop:
    name: Build Desktop
    runs-on: ${{ matrix.os }}
    needs: [lint, test]
    if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' }}

    strategy:
      matrix:
        type: [macos, windows, linux]
        include:
          - type: macos
            os: macos-latest
            flutter-path: /Users/runner/hostedtoolcache/flutter
            build-path: build/macos/Build/Products/Release
            build-output: appainter.app

          - type: windows
            os: windows-latest
            flutter-path: C:\hostedtoolcache\windows\flutter
            build-path: build\windows\runner
            build-output: Release

          - type: linux
            os: ubuntu-latest
            flutter-path: /opt/hostedtoolcache/flutter
            build-path: build/linux/x64/release
            build-output: bundle

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Get project Flutter version 🏷️
        uses: kuhnroyal/flutter-fvm-config-action@v1

      - name: Setup Flutter 💻
        uses: subosito/flutter-action@v2.2.1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-key: ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Patch for Linux build 🩹
        if: ${{ matrix.type == 'linux' }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Build desktop app 🏗
        run: |
          flutter config --enable-${{ matrix.type }}-desktop
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs
          # Bump app version, the new version is committed in the release step
          flutter pub run cider bump ${{ github.event.inputs.release-type }}
          flutter build ${{ matrix.type }}

      - name: Compress app 🗜️
        run: |
          cd ${{ matrix.build-path }}
          tar -zcvf appainter_${{ matrix.type }}.tar.gz ${{ matrix.build-output }}

      - name: Upload app ⬆️
        uses: actions/upload-artifact@v2
        with:
          path: "**/appainter_${{ matrix.type }}.tar.gz"
          if-no-files-found: error

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build-desktop

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Get project Flutter version 🏷️
        uses: kuhnroyal/flutter-fvm-config-action@v1

      - name: Setup Flutter 💻
        uses: subosito/flutter-action@v2.2.1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-key: ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Get previous tag 🏷️
        id: previous-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1.1.0

      - name: Bump app version 🔼
        id: bump-version
        run: |
          flutter pub get
          echo "::set-output name=version::v$(flutter pub run cider bump ${{ github.event.inputs.release-type }})"

      - name: Commit new version 🆕
        uses: stefanzweifel/git-auto-commit-action@v4.13.1
        env:
          version: ${{ steps.bump-version.outputs.version }}
        with:
          commit_message: "chore(release): ${{ env.version }} [skip ci]"
          tagging_message: ${{ env.version }}
          file_pattern: pubspec.yaml
          push_options: --force

      - name: Generate changelog 📝
        id: generate-changelog
        uses: mikepenz/release-changelog-builder-action@v2.8.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configuration: changelog_config.json
          fromTag: ${{ steps.previous-tag.outputs.tag }}
          toTag: ${{ steps.bump-version.outputs.version }}

      - name: Download artifacts ⬇️
        uses: actions/download-artifact@v2

      - name: Release 🚀
        uses: ncipollo/release-action@v1.9.0
        with:
          tag: ${{ steps.bump-version.outputs.version }}
          artifacts: "**/appainter*.tar.gz"
          body: ${{ steps.generate-changelog.outputs.changelog }}
          token: ${{ secrets.PAT }}
