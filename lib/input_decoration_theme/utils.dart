import 'package:flutter/material.dart';

extension InputDecorationThemeExtension on InputDecorationTheme {
  InputDecorationTheme copyWithNull({
    bool border = false,
    bool constraints = false,
    bool contentPadding = false,
    bool counterStyle = false,
    bool disabledBorder = false,
    bool enabledBorder = false,
    bool errorBorder = false,
    bool errorMaxLines = false,
    bool errorStyle = false,
    bool fillColor = false,
    bool floatingLabelStyle = false,
    bool focusColor = false,
    bool focusedBorder = false,
    bool focusedErrorBorder = false,
    bool helperMaxLines = false,
    bool helperStyle = false,
    bool hintStyle = false,
    bool hoverColor = false,
    bool iconColor = false,
    bool labelStyle = false,
    bool prefixIconColor = false,
    bool prefixStyle = false,
    bool suffixIconColor = false,
    bool suffixStyle = false,
  }) {
    return InputDecorationTheme(
      alignLabelWithHint: alignLabelWithHint,
      border: border == true ? null : this.border,
      constraints: constraints == true ? null : this.constraints,
      contentPadding: contentPadding == true ? null : this.contentPadding,
      counterStyle: counterStyle == true ? null : this.counterStyle,
      disabledBorder: disabledBorder == true ? null : this.disabledBorder,
      enabledBorder: enabledBorder == true ? null : this.enabledBorder,
      errorBorder: errorBorder == true ? null : this.errorBorder,
      errorMaxLines: errorMaxLines == true ? null : this.errorMaxLines,
      errorStyle: errorStyle == true ? null : this.errorStyle,
      fillColor: fillColor == true ? null : this.fillColor,
      filled: filled,
      floatingLabelAlignment: floatingLabelAlignment,
      floatingLabelBehavior: floatingLabelBehavior,
      floatingLabelStyle:
          floatingLabelStyle == true ? null : this.floatingLabelStyle,
      focusColor: focusColor == true ? null : this.focusColor,
      focusedBorder: focusedBorder == true ? null : this.focusedBorder,
      focusedErrorBorder:
          focusedErrorBorder == true ? null : this.focusedErrorBorder,
      helperMaxLines: helperMaxLines == true ? null : this.helperMaxLines,
      helperStyle: helperStyle == true ? null : this.helperStyle,
      hintStyle: hintStyle == true ? null : this.hintStyle,
      hoverColor: hoverColor == true ? null : this.hoverColor,
      iconColor: iconColor == true ? null : this.iconColor,
      isCollapsed: isCollapsed,
      isDense: isDense,
      labelStyle: labelStyle == true ? null : this.labelStyle,
      prefixIconColor: prefixIconColor == true ? null : this.prefixIconColor,
      prefixStyle: prefixStyle == true ? null : this.prefixStyle,
      suffixIconColor: suffixIconColor == true ? null : this.suffixIconColor,
      suffixStyle: suffixStyle == true ? null : this.suffixStyle,
    );
  }
}
